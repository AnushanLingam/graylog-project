#!/usr/bin/env bash

set -e

log() {
	local msg="$1"

	echo "[BOOTSTRAP]==> $msg"
}

prefix=$(dirname $0)
. ${prefix}/includes

root=$(dirname $(dirname $0))
deproot=${1:-"${modulesPrefix}"}
pom="$root/pom.xml"
repos=$(grep '<!-- GIT ' $pom | sed -e 's/.*GIT \([^[:space:]]\{1,\}\).*/\1/g')
gitignore="$root/.gitignore"

for repo_and_tag in $repos; do
	repo=$(echo $repo_and_tag | cut -d '=' -f 1)
	rev=$(echo $repo_and_tag | cut -d '=' -f 2)
	dir=$(basename $repo .git)

	if [ -z "$rev" -o "$rev" = "$repo" ]; then
		log "WARNING: No rev given in '$repo_and_tag', using default: master"
		rev="master"
	fi

	if [ -d "$root/$deproot/$dir" ]; then
		log "Updating repository: $repo"
		(cd "$root/$deproot/$dir" && git checkout master && git fetch --all --tags && git pull origin master)
	else
		log "Cloning repository: $repo"
		git clone $repo "$root/$deproot/$dir"
		grep -q ${dir} ${gitignore} || printf "\n%s\n" "${dir}" >> ${gitignore}
	fi

	log "Checkout revision: $rev in $repo"
	(cd "$root/$deproot/$dir" && git checkout -f -B build-$rev $rev)

done

exit 0
